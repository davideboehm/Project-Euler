using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Problem2
{
    class Program
    {
        /// <summary>
        /// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
        /// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
        /// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
        /// 
        /// Answer: 4613732
        /// </summary>
        /// <param name="args"></param>
        static void Main(string[] args)
        {
            var list = Enumerable.Range(0, 10000);
            var result =  list.Select(Fibonacci).TakeWhile(value=> value < 4000000).Where(value => ((value & 1) == 0)).Sum();
        }


        private static Dictionary<int, int> cachedFibonacciValues = new Dictionary<int, int>();

        private static int Fibonacci(int sequenceNumber)
        {
            if (sequenceNumber < 0)
            {
                throw new ArgumentException("Doesn't support negative numbers");
            }
            if (sequenceNumber <=1)
            {
                return sequenceNumber;
            }
            if(cachedFibonacciValues.ContainsKey(sequenceNumber))
            {
                return cachedFibonacciValues[sequenceNumber];
            }

            var result = Fibonacci(sequenceNumber - 1) + Fibonacci(sequenceNumber - 2);
            cachedFibonacciValues.Add(sequenceNumber, result);
            return result;
        }
    }
}
